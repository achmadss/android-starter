name: Setup Template

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Project Name'
        required: false
        default: ''
      package_name:
        description: 'Package Name (e.g., com.company.myapp)'
        required: false
        default: ''
      min_sdk:
        description: 'Minimum SDK Version'
        required: false
        default: '26'

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    if: ${{ !github.event.repository.is_template }}
    steps:
      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
        shell: bash

      - uses: actions/checkout@v4

      - name: Setup Project
        run: |
          chmod +x setup.sh
          
          # Use repository name as default project name if not provided
          REPO_NAME="${{ github.event.repository.name }}"
          PROJECT_NAME="${{ inputs.project_name }}"
          PACKAGE_NAME="${{ inputs.package_name }}"
          MIN_SDK="${{ inputs.min_sdk }}"
          
          # Use repo name if project name is empty
          if [ -z "$PROJECT_NAME" ]; then
            PROJECT_NAME="$REPO_NAME"
          fi
          
          # Generate package name from repo name if not provided
          if [ -z "$PACKAGE_NAME" ]; then
            OWNER="${{ github.repository_owner }}"
            # Convert to lowercase and replace hyphens/underscores with dots
            CLEAN_OWNER=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]' | tr '-_' '.')
            CLEAN_REPO=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]' | tr '-_' '')
            PACKAGE_NAME="com.${CLEAN_OWNER}.${CLEAN_REPO}"
          fi
          
          ./setup.sh --name "$PROJECT_NAME" --package "$PACKAGE_NAME" --sdk "$MIN_SDK" --yes

      - name: Commit changes
        run: |
          git add .
          git commit -m "Setup project: $PROJECT_NAME" || echo "No changes to commit"
          git push -u origin main